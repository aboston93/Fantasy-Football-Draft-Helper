{"version":3,"sources":["components/player.js","components/detail.js","components/team.js","App.js","index.js"],"names":["savePlayer","player","fetch","method","headers","Content-Type","body","JSON","stringify","Playeradd","state","newPlayer","Name","Surname","Rank","position","Yearspro","handleTextInput","evnt","_objectSpread","_this","target","name","value","setState","handleSubmit","preventDefault","react_default","a","createElement","onSubmit","this","type","onChange","placeholder","React","Component","Detailadd","pros","cons","stats","detail_objectSpread","Teamadd","team","teamstats","team_objectSpread","Player","_ref","Detail","_ref2","_ref3","App","players","_this2","getAllPlayers","then","getAllDetails","details","getAllTeams","teams","res","json","player_Playeradd","addPlayer","map","detail_Detailadd","addplayer","team_Teamadd","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.901f11d8.chunk.js","sourcesContent":["import React from 'react';\nconst Player = ({ Name, Surname, Rank, position, Yearspro }) =>\n    (<li>{Name} - {Surname}- {Rank}-{position}-{Yearspro}</li>)\n\n\n    const savePlayer = (player) =>\n  fetch('/fantasy/fantasylist', \n    { method : 'POST'\n    , headers: { 'Content-Type': 'application/json' }\n    , body: JSON.stringify(player)\n    }\n  )\n// all platers into a table\nconst Players = (players) => (\n    <ul>\n        {players.map(Player)}\n        {/* assignments.map(x => assignment(x)) */}\n    </ul>\n)\n\nexport default class Playeradd extends React.Component {\n    state = {\n        newPlayer:  {Name: \"Tom\", Surname: \"Brady\", Rank: 1, position: \"QB\", Yearspro: 3}\n\n    }\n\n    handleTextInput = (evnt) => {\n        //1. copy from state\n        let newPlayer = { ...this.state.newPlayer }\n\n        //2. modify state\n        newPlayer[evnt.target.name] = evnt.target.value\n        \n        //3. setState\n        this.setState({ newPlayer })\n    }\n\n    handleSubmit = (evnt) => {\n        evnt.preventDefault();\nsavePlayer(this.state.newPlayer)\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"Name\"\n                    onChange={this.handleTextInput}\n                    placeholder=\"Player Name\"\n                />\n                <input\n                    type=\"text\"\n                    name=\"Surname\"\n                    onChange={this.handleTextInput}\n                    placeholder=\"Player Surname \"\n                />\n                <input\n                    type=\"number\"\n                    name=\"Rank\"\n                    onChange={this.handleTextInput}\n                    placeholder=\"Player Rank\"\n                />\n                <input\n                    type=\"text\"\n                    name=\"position\"\n                    onChange={this.handleTextInput}\n                    placeholder=\"Player  Position\"\n                />\n                <input\n                    type=\"number\"\n                    name=\"Yearspro\"\n                    onChange={this.handleTextInput}\n                    placeholder=\"player Yearspro\"\n                />\n                <input type=\"submit\" value=\"+\" />\n            </form>\n        )\n    }\n}\n\n\n","import React from 'react';\nconst savePlayer = (player) =>\nfetch('/detail/fantasylist', \n  { method : 'POST'\n  , headers: { 'Content-Type': 'application/json' }\n  , body: JSON.stringify(player)\n  }\n)\n\nexport default class Detailadd extends React.Component {\n    state = {\n        newPlayer:  {pros: \"ggof\", cons: \"Bad\", stats: 1, }\n\n    }\n\n    handleTextInput = (evnt) => {\n        //1. copy from state\n        let newPlayer = { ...this.state.newPlayer }\n\n        //2. modify state\n        newPlayer[evnt.target.name] = evnt.target.value\n        \n        //3. setState\n        this.setState({ newPlayer })\n    }\n\n    handleSubmit = (evnt) => {\n        evnt.preventDefault();\nsavePlayer(this.state.newPlayer)\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"pros\"\n                    onChange={this.handleTextInput}\n                    placeholder=\"pros\"\n                />\n                <input\n                    type=\"text\"\n                    name=\"cons\"\n                    onChange={this.handleTextInput}\n                    placeholder=\"cons \"\n                />\n                <input\n                    type=\"text\"\n                    name=\"stats\"\n                    onChange={this.handleTextInput}\n                    placeholder=\"stats\"\n                />\n                \n              \n                <input type=\"submit\" value=\"submit\" />\n            </form>\n        )\n    }\n}\n\n\n","import React from 'react';\nconst savePlayer = (player) =>\nfetch('/team/fantasylist', \n  { method : 'POST'\n  , headers: { 'Content-Type': 'application/json' }\n  , body: JSON.stringify(player)\n  }\n)\n\nexport default class Teamadd extends React.Component {\n    state = {\n        newPlayer:  {team: \"gof\", teamstats: \"\" }\n  \n    }\n\n    handleTextInput = (evnt) => {\n        //1. copy from state\n        let newPlayer = { ...this.state.newPlayer }\n\n        //2. modify state\n        newPlayer[evnt.target.name] = evnt.target.value\n        \n        //3. setState\n        this.setState({ newPlayer })\n    }\n\n    handleSubmit = (evnt) => {\n        evnt.preventDefault();\nsavePlayer(this.state.newPlayer)\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"team\"\n                    onChange={this.handleTextInput}\n                    placeholder=\"team\"\n                />\n                <input\n                    type=\"text\"\n                    name=\"teamstats\"\n                    onChange={this.handleTextInput}\n                    placeholder=\"teamstats \"\n                />\n               \n              \n                <input type=\"submit\" value=\"submit\" />\n            </form>\n        )\n    }\n}\n\n\n","\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n// import Home from './components/Home.js'\nimport './App.css';\nimport Playeradd from './components/player'\nimport React, { Component } from 'react'\nimport Detailadd from './components/detail'\nimport Teamadd  from \"./components/team\"\n\nconst Player = ({ Name, Surname, Rank, position, Yearspro }) =>\n    (<li>{Name} - {Surname}- {Rank}-{position}-{Yearspro}</li>)\n// all platers into a table\nconst Players = (players) => (\n    <ul>\n        {players.map(Player)}\n        {/* assignments.map(x => assignment(x)) */}\n    </ul>\n)\n// getFantasyList = () => \n//   fetch('/fantasy/fantasylist')\n//   .then(res => res.json())\n// single player componet\nconst Detail  = ({ pros, cons, stats,  }) =>\n    (<li>{pros} - {cons}- {stats}</li>)\n\n// all platers into a table\nconst Details = (details) => (\n    <ul>\n        {details.map(Detail)}\n        {/* assignments.map(x => assignment(x)) */}\n    </ul>\n)\n\nconst team  = ({ team, teamstats,   }) =>\n    (<li>{team} - {teamstats}</li>)\n\n// all platers into a table\nconst teams = (teams) => (\n    <ul>\n        {teams.map(team)}\n        {/* assignments.map(x => assignment(x)) */}\n    </ul>\n)\n\n\nconst getAllPlayer = () =>\n  fetch('fantasy/fantasylist')\n    .then(res => res.json())\n    .catch(() => []) //if an error occurs then return an Promise that resolves to an empty array\n\n\n\nconst getPlayer= (_id) =>\n  fetch(`/fantasy/${_id}`)\n    .then(res => res.json())\n    .catch(() => [])\n\n\n    const getAllDetail = () =>\n    fetch('detail/fantasylist')\n      .then(res => res.json())\n      .catch(() => []) //if an error occurs then return an Promise that resolves to an empty array\n  \n  \n  \n  const getDetail= (detailid) =>\n    fetch(`/detail/${detailid}`)\n      .then(res => res.json())\n      .catch(() => [])\n  \n\n\n\nexport default class App extends Component {\n  state =  \n    { \n        \n         players: [\n         {Name:\"\",  Surname:\" \",Rank:0, position:\"\", Yearspro:0},\n            {pros:\" \",cons:\"\", stats:\"\"},\n            {team:\"\", teamstats:\"\"}\n            \n            ]\n        \n    }\n\n  componentWillMount() {\n    this.getAllPlayers().then(players => this.setState({players}))\n    this.getAllDetails().then(details => this.setState({details}))\n    this.getAllTeams().then(teams => this.setState({teams}))\n    \n  }\n\n  getAllPlayers() {\n   return( fetch(\"/fantasy/fantasylist\")\n    .then(res => res.json())\n   )\n      \n  }\n\n  getAllDetails() {\n    return( fetch(\"/detail/fantasylist\")\n     .then(res => res.json())\n    )\n       \n   }\n   getAllTeams() {\n    return( fetch(\"/team/fantasylist\")\n     .then(res => res.json())\n    )\n       \n   }\n   \n  // savePlayer () {\n  //   (createdPlayer) .then(() => this.getAppCourseWork())\n  // }\n\n  render() {\n    return (\n      <div>\n        <Playeradd addPlayer={this.addPlayer}/>\n        {Players(this.state.players)}\n        <Detailadd addPlayer= {this.addplayer}/>\n        {Details(this.state.players)}\n        <Teamadd addPlayer= {this.addplayer}/>\n        {teams(this.state.players)}\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}